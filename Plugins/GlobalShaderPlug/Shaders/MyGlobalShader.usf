#include "/Engine/Public/Platform.ush"
#include "/Engine/Private/Common.ush"

float4 MainColor;
Texture2D MainTexture;
SamplerState MainTextureSampler;

void MainVS(
    in float4 InPosition : ATTRIBUTE0,
    in float2 InUV : ATTRIBUTE1,
    out float2 OutUV : TEXCOORD0,
    out float4 OutPosition : SV_POSITION
)
{
    OutPosition = InPosition;
    OutUV = InUV;
}

void MainPS(
    in float2 UV : TEXCOORD0,
    out float4 OutColor : SV_Target0
)
{
    //OutColor = MainColor * MainTexture.Sample(MainTextureSampler, UV.xy);
    float4 uniformColor = lerp(MyUniform.Color1, MyUniform.Color2, MyUniform.LerpValue);
    OutColor = uniformColor * MainTexture.Sample(MainTextureSampler, UV.xy);
}


RWTexture2D<float4> RWOutputSurface;

[numthreads(32,32,1)]
void MainCS(
	uint3 GroupId: SV_GroupID,
	uint3 DispatchThreadId : SV_DispatchThreadID,
	uint3 GroupThreadId : SV_GroupThreadID)
{
    RWOutputSurface[DispatchThreadId.xy] = float4(float(GroupThreadId.x) / float(32), float(GroupThreadId.y) / float(32), 0, 1);
}